{"version":3,"sources":["components/Button/index.jsx","App.jsx","components/Functions.jsx","components/MathOperation.jsx","components/Numbers.jsx","components/Result.jsx","index.jsx"],"names":["Button","type","text","clickHandler","className","onClick","App","useState","stack","setStack","items","words","value","length","onClickNumber","number","onContentClear","onDelete","newStack","substring","onClickOperation","operation","onClickEqual","eval","toString","Functions","MathOperations","numbers","renderButtons","map","Numbers","Result","defaultProps","reactDom","render","document","getElementById"],"mappings":"yGAAA,sBAgBeA,IAZA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,aAAf,OACX,wBAAQC,UAAWH,EAAMI,QAAS,kBAAMF,EAAaD,IAArD,SACI,qCAAQA,EAAR,W,ouCCGFI,IAAM,SAANA,MACF,cAA0BC,oDAAS,IAAnC,4MAAOC,MAAP,cAAcC,SAAd,cAEMC,MAAQC,kDAAMH,MAAO,gBACrBI,MAAQF,MAAMG,OAAS,EAAIH,MAAMA,MAAMG,OAAO,GAAK,IAEzD,OACI,oEAAMT,UAAU,mBAAhB,UAEI,2DAAC,kDAAD,CAAQQ,MAAOA,QAEf,2DAAC,mDAAD,CACIE,cAAe,SAAAC,GACXN,SAAS,GAAD,OAAID,OAAJ,OAAYO,OAG5B,2DAAC,qDAAD,CACIC,eAAgB,WACZP,SAAS,KAEbQ,SAAU,WACN,GAAIT,MAAMK,OAAS,EAAG,CAClB,IAAMK,EAAWV,MAAMW,UAAU,EAAGX,MAAMK,OAAS,GACnDJ,SAASS,OAIrB,2DAAC,yDAAD,CACIE,iBAAkB,SAAAC,GACdZ,SAAS,GAAD,OAAID,OAAJ,OAAYa,KAExBC,aAAc,wBACVb,SAASc,KAAKf,OAAOgB,mBAM1BlB,2B,8BC/Cf,uBAgBemB,IAZG,SAAC,GAAD,IAAGT,EAAH,EAAGA,eAAiBC,EAApB,EAAoBA,SAApB,OACd,0BAASb,UAAU,YAAnB,UACI,cAAC,IAAD,CAAQH,KAAK,mBAAmBC,KAAK,QAAQC,aAAca,IAC3D,cAAC,IAAD,CAAQd,KAAK,SAASC,aAAcc,S,6BCP5C,uBAmBeS,IAfQ,SAAC,GAAD,IAAGN,EAAH,EAAGA,iBAAkBE,EAArB,EAAqBA,aAArB,OACnB,0BAASlB,UAAU,kBAAnB,UACI,cAAC,IAAD,CAAQF,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAciB,IAC/B,cAAC,IAAD,CAAQlB,KAAK,IAAIC,aAAcmB,S,6BCVvC,uBAIMK,EAAU,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACtCC,EAAgB,SAAAd,GAIlB,OAAOa,EAAQE,KAHM,SAAAd,GAAM,OACvB,cAAC,IAAD,CAAqBb,KAAMa,EAAOS,WAAYrB,aAAcW,GAA/CC,OAeNe,IAVC,SAAC,GAAD,IAAGhB,EAAH,EAAGA,cAAH,OACZ,yBAASV,UAAU,UAAnB,SACKwB,EAAcd,O,6BCdvB,gBAGMiB,EAAS,SAAC,GAAD,IAAGnB,EAAH,EAAGA,MAAH,OACX,qBAAKR,UAAU,SAAf,SACKQ,KAQTmB,EAAOC,aAAe,CAClBpB,MAAO,KAGImB,O,8BCjBf,8CAIAE,IAASC,OAAO,cAAC,IAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.cbe85507.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\"\r\n\r\nconst Button = ({ type, text, clickHandler }) => (\r\n    <button className={type} onClick={() => clickHandler(text)}>\r\n        <span> {text} </span>\r\n    </button>\r\n)\r\n\r\nButton.propTypes = {\r\n    type: PropTypes.string,\r\n    text: PropTypes.string.isRequired,\r\n    clickHandler: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Button","/* eslint no-eval: 0 */\r\nimport React, { useState } from 'react'\r\nimport { words } from 'lodash'\r\nimport Functions from './components/Functions'\r\nimport MathOperations from './components/MathOperation'\r\nimport Numbers from './components/Numbers'\r\nimport Result from \"./components/Result\"\r\nimport \"./App.css\"\r\n\r\nconst App = () => {\r\n    const [stack, setStack] = useState(\"\");\r\n    //Utilizacion de lodash.words\r\n    const items = words(stack, /[^-^+^*^/]+/g)\r\n    const value = items.length > 0 ? items[items.length-1] : \"0\";\r\n\r\n    return (\r\n        <main className=\"react-calculator\">\r\n\r\n            <Result value={value} />\r\n\r\n            <Numbers\r\n                onClickNumber={number => {\r\n                    setStack(`${stack}${number}`)\r\n                }} />\r\n\r\n            <Functions\r\n                onContentClear={() => {\r\n                    setStack(\"\")\r\n                }}\r\n                onDelete={() => {\r\n                    if (stack.length > 0) {\r\n                        const newStack = stack.substring(0, stack.length - 1)\r\n                        setStack(newStack)\r\n                    }\r\n                } } />\r\n\r\n            <MathOperations\r\n                onClickOperation={operation => {\r\n                    setStack(`${stack}${operation}`)\r\n                }}\r\n                onClickEqual={() => {\r\n                    setStack(eval(stack).toString())\r\n                }} />\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\nconst Functions = ({ onContentClear , onDelete }) => (\r\n    <section className=\"functions\">\r\n        <Button type=\"button-long-text\" text=\"clear\" clickHandler={onContentClear}/>\r\n        <Button text=\"&larr;\" clickHandler={onDelete}/>\r\n    </section>\r\n)\r\n\r\nFunctions.propTypes = {\r\n    onContentClear: PropTypes.func.isRequired,\r\n    onDelete: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Functions","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\nconst MathOperations = ({ onClickOperation, onClickEqual }) => (\r\n    <section className=\"math-operations\">\r\n        <Button text=\"+\" clickHandler={onClickOperation}/>\r\n        <Button text=\"-\" clickHandler={onClickOperation}/>\r\n        <Button text=\"*\" clickHandler={onClickOperation}/>\r\n        <Button text=\"/\" clickHandler={onClickOperation}/>\r\n        <Button text=\"=\" clickHandler={onClickEqual}/>\r\n    </section>\r\n)\r\n\r\nMathOperations.propTypes = {\r\n    onClickOperation: PropTypes.func.isRequired,\r\n    onClickEqual: PropTypes.func.isRequired\r\n}\r\n\r\nexport default MathOperations","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\nimport Button from \"./Button\"\r\n\r\nconst numbers = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0]\r\nconst renderButtons = onClickNumber => {\r\n    const renderButton = number => (\r\n        <Button key={number} text={number.toString()} clickHandler={onClickNumber} />\r\n    )\r\n    return numbers.map(renderButton)\r\n}\r\n\r\nconst Numbers = ({ onClickNumber }) => (\r\n    <section className=\"numbers\">\r\n        {renderButtons(onClickNumber)}\r\n    </section>\r\n)\r\n\r\nNumbers.propTypes = {\r\n    onClickNumber: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Numbers","import React from 'react'\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Result = ({ value }) => (\r\n    <div className=\"result\">\r\n        {value}\r\n    </div>\r\n)\r\n\r\nResult.propTypes = {\r\n    value: PropTypes.string.isRequired\r\n}\r\n\r\nResult.defaultProps = {\r\n    value: \"0\"\r\n}\r\n\r\nexport default Result\r\n","import React from 'react';\r\nimport reactDom from 'react-dom';\r\nimport App from './App';\r\n\r\nreactDom.render(<App/>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}